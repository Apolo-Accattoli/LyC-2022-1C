
START:
MOV AX,@DATA
MOV DS,AX
MOV es,ax
FINIT
FFREE

fld 3.25
fst f1
fld 5
fild a
fxch
fcom
fstsw ax
sahf
JB else1
JMP startIf1
else1:
fld 6
fist x
JMP endif1
startIf1:
fld 30
fild a
fxch
fcom
fstsw ax
sahf
JAE startIf2
fld 31
fild a
fxch
fcom
fstsw ax
sahf
JE startIf2
JMP else2
JMP startIf2
else2:
fld 10
fist c
JMP endif2
startIf2:
displayString _Else
newLine 1
endif2:
fld 7
fist i
endif1:
GetFloat x
fld 40
fild a
fxch
fcom
fstsw ax
sahf
JNAE endif3
fld 41
fild a
fxch
fcom
fstsw ax
sahf
JNE endif3
startIf3:
fld 120
fist b
endif3:
DisplayFloat x,2
newLine 1
condicionWhile1:
fld 1
fild a
fxch
fcom
fstsw ax
sahf
JB startWhile1
fld 1
fild b
fxch
fcom
fstsw ax
sahf
JB startWhile1
startWhile1:
condicionWhile2:
fld 1
fild c
fxch
fcom
fstsw ax
sahf
JNB endwhile2
startWhile2:
fld 1
fist x
fld 100
fild c
fxch
fcom
fstsw ax
sahf
JNA else4
JMP startIf4
else4:
displayString _menor
newLine 1
JMP endif4
startIf4:
displayString _mayor
newLine 1
endif4:
JMP condicionWhile2
endwhile2:
displayString _primero
newLine 1
JMP condicionWhile1
endwhile1:
fild a
fild b
fadd
fistp @aux1
fild @aux1
fist a
fild b
fild 4
fadd
fistp @aux2
fld @aux2
fist a
fild b
fild 9
fadd
fistp @aux3
fild a
fild @aux3
fmul
fistp @aux4
fld @aux4
fist a
fld f1
fild a
fadd
fistp @aux5
fild @aux5
fld 3.33
fadd
fstp @aux6
fld @aux6
fst f2
fld 2
fild a
fxch
fcom
fstsw ax
sahf
JNB else5
fld 15
fild a
fxch
fcom
fstsw ax
sahf
JNA else5
JMP startIf5
else5:
displayString _si_BETWEEN
newLine 1
JMP endif5
startIf5:
displayString _no_BETWEEN
newLine 1
endif5:
fld 2
fild b
fmul
fistp @aux7
fild @aux7
fild 7
fadd
fistp @aux8
fld @aux8
fild a
fxch
fcom
fstsw ax
sahf
JE startIf6
fld 12
fild a
fxch
fcom
fstsw ax
sahf
JE startIf6
fld 34
fild i
fadd
fistp @aux9
fild b
fild @aux9
fmul
fistp @aux10
fild a
fild @aux10
fadd
fistp @aux11
fild @aux11
fild a
fxch
fcom
fstsw ax
sahf
JE startIf6
fld 48
fild a
fxch
fcom
fstsw ax
sahf
JE startIf6
JMP else6
JMP startIf6
else6:
displayString _si_INLIST
newLine 1
JMP endif6
startIf6:
displayString _no_INLIST
newLine 1
endif6:
MOV si, OFFSET   _una_cadena
MOV di, OFFSET  cadena
CALL assignString
displayString _ewr
newLine 1
